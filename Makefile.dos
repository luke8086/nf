SRCDIR = SRC
OBJDIR = BUILD

CC = TCC
CFLAGS = -mt -u- -g1 -c -I$(SRCDIR) -nBUILD
INCLUDES = $(SRCDIR)/nf_cmmn.h

AS = NASM
ASFLAGS = -f obj

LD = TLINK

OBJS = $(OBJDIR)\NF_BASE.OBJ $(OBJDIR)\NF_INTP.OBJ $(OBJDIR)\NF_LEX.OBJ \
        $(OBJDIR)\NF_MACH.OBJ $(OBJDIR)\NF_PRTF.OBJ $(OBJDIR)\NF_STMT.OBJ \
        $(OBJDIR)\NF_STR.OBJ $(OBJDIR)\NF_WORD.OBJ $(OBJDIR)\NF_LIBC.OBJ \
        $(OBJDIR)\NF_MAIN.OBJ $(OBJDIR)\NF_STRT.OBJ $(OBJDIR)\NF_WORDS.OBJ \
        $(OBJDIR)\NF_INTR.OBJ

all: $(OBJDIR)\NF.COM $(OBJDIR)\NF_BOOT.BIN

clean:
        -del $(OBJDIR)\*.COM
        -del $(OBJDIR)\*.OBJ
        -del $(OBJDIR)\*.MAP
        -del $(OBJDIR)\*.BIN

# FIXME: Borland Make 3.0 apparently doesn't support
# wildcard rules for files in subdirectories. A cleaner solution
# needs to be investigated instead of creating separate rules
# for every file

$(OBJDIR)\NF.COM: $(OBJS)
        $(LD) @$(SRCDIR)\X86\TLINK.RSP

$(OBJDIR)\NF_BOOT.BIN: $(SRCDIR)\X86\NF_BOOT.ASM
        $(AS) $(SRCDIR)\X86\$&.ASM -o $(OBJDIR)\$&.BIN

$(OBJDIR)\NF_BASE.OBJ: $(SRCDIR)\NF_BASE.C $(INCLUDES)
        $(CC) $(CFLAGS) $(SRCDIR)\$&.C

$(OBJDIR)\NF_INTP.OBJ: $(SRCDIR)\NF_INTP.C $(INCLUDES)
        $(CC) $(CFLAGS) $(SRCDIR)\$&.C

$(OBJDIR)\NF_LEX.OBJ: $(SRCDIR)\NF_LEX.C $(INCLUDES)
        $(CC) $(CFLAGS) $(SRCDIR)\$&.C

$(OBJDIR)\NF_MACH.OBJ: $(SRCDIR)\NF_MACH.C $(INCLUDES)
        $(CC) $(CFLAGS) $(SRCDIR)\$&.C

$(OBJDIR)\NF_PRTF.OBJ: $(SRCDIR)\NF_PRTF.C $(INCLUDES)
        $(CC) $(CFLAGS) $(SRCDIR)\$&.C

$(OBJDIR)\NF_STMT.OBJ: $(SRCDIR)\NF_STMT.C $(INCLUDES)
        $(CC) $(CFLAGS) $(SRCDIR)\$&.C

$(OBJDIR)\NF_STR.OBJ: $(SRCDIR)\NF_STR.C $(INCLUDES)
        $(CC) $(CFLAGS) $(SRCDIR)\$&.C

$(OBJDIR)\NF_WORD.OBJ: $(SRCDIR)\NF_WORD.C $(INCLUDES)
        $(CC) $(CFLAGS) $(SRCDIR)\$&.C

$(OBJDIR)\NF_LIBC.OBJ: $(SRCDIR)\X86\NF_LIBC.C $(INCLUDES)
        $(CC) $(CFLAGS) $(SRCDIR)\X86\$&.C

$(OBJDIR)\NF_WORDS.OBJ: $(SRCDIR)\X86\NF_WORDS.C $(INCLUDES)
        $(CC) $(CFLAGS) $(SRCDIR)\X86\$&.C

$(OBJDIR)\NF_MAIN.OBJ: $(SRCDIR)\X86\NF_MAIN.C $(INCLUDES)
        $(CC) $(CFLAGS) $(SRCDIR)\X86\$&.C

$(OBJDIR)\NF_INTR.OBJ: $(SRCDIR)\X86\NF_INTR.ASM
        $(AS) $(ASFLAGS) $(SRCDIR)\X86\$&.ASM -o $(OBJDIR)\$&.OBJ

$(OBJDIR)\NF_STRT.OBJ: $(SRCDIR)\X86\NF_STRT.ASM
        $(AS) $(ASFLAGS) $(SRCDIR)\X86\$&.ASM -o $(OBJDIR)\$&.OBJ
